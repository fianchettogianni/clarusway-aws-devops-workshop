AWSTemplateFormatVersion: 2010-09-09

Description: |
  CloudFormation Template for Milliseconds Converter Application. This template creates Python Flask Web 
  Application on Amazon Linux 2 (ami-0947d2ba12ee1ff75) EC2 Instance with custom security group allowing 
  http connections on port 80. Milliseconds Converter Application is downloaded from Github repository, 
  then installed on Flask.

Parameters:
  MyKeyName:
    Description: Enter the name of your Key Pair for SSH connections
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must one of the existing EC2 KeyPair

Resources:
  MyAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      # AvailabilityZones: !GetAZs 
      HealthCheckType: ELB
      DesiredCapacity: '2'
      HealthCheckGracePeriod: 90     
      MinSize: '1'
      MaxSize: '3'
        
  WebServerSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Enable HTTP for Flask Web Server #required
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  # WebServerInstance:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: ami-0947d2ba12ee1ff75
      InstanceType: t2.micro
      KeyName: !Ref MyKeyName
      SecurityGroupIds: 
        - !Ref WebServerSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub Web Server of ${AWS::StackName} Stack 
      UserData:
         'Fn::Base64': 
          !Sub |
           #!/bin/bash           
           yum update -y
           yum install python3 -y
           pip3 install flask
 
           mkdir templates
           cd templates 
           sudo wget https://raw.githubusercontent.com/E2028-Hamza/clarusway-aws-devops-workshop/master/aws/projects/002-milliseconds-converter/templates/index.html
           sudo wget https://raw.githubusercontent.com/E2028-Hamza/clarusway-aws-devops-workshop/master/aws/projects/002-milliseconds-converter/templates/result.html
           
           cd ..
           sudo wget https://raw.githubusercontent.com/E2028-Hamza/clarusway-aws-devops-workshop/master/aws/projects/002-milliseconds-converter/app.py
           python3 app.py

  MyApplicationLoadBalancer:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      SecurityGroups:
        - !GetAtt WebServerSecurityGroup.GroupId
        
  MyALBListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions: 
        - Type: forward
          TargetGroupArn: !Ref MyALBTargetGroup
      LoadBalancerArn: !Ref MyApplicationLoadBalancer
      Port: 80
      Protocol: HTTP
    
  MyALBTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5

# Outputs: 
  WebsiteURL:
    Value: !Sub 
      - http://${PublicAddress}
      - PublicAddress: !GetAtt WebServerInstance.PublicDnsName
    Description: Milliseconds Converter Application URL